class QuantaRouteDemo{constructor(){this.map=null,this.startMarker=null,this.endMarker=null,this.routeLayer=null,this.ssspRouteLayer=null,this.dijkstraRouteLayer=null,this.explorationVisualizer=null,this.clickCount=0,this.config=window.demoConfig||new DemoConfig,this.apiBaseUrl=this.config.config.apiBaseUrl,this.isMobile=window.innerWidth<=768,this.sidebarOpen=!1,this.DEBUG_MODE=!1,this.currentProfile="car",this.waypoints=[],this.waypointMarkers=[],this.elevationChart=null,this.searchTimeout=null,this.bengaluruPOIs=[],this.connectorLayers=[],this.distanceMarkers=[],this.currentHighlightedSegment=null,this.selectedInstructionIndex=-1,this.init()}log(...t){this.DEBUG_MODE}formatDuration(t){if(!t||t<0)return"0 min";if(t<60)return`${Math.round(t)} min`;const e=Math.floor(t/60),n=Math.round(t%60);return 0===n?`${e}h`:`${e}h ${n}m`}async init(){this.initializeMap(),this.setupEventListeners(),this.setupMobileHandlers(),await this.checkServerStatus(),window.ExplorationVisualizer&&(this.explorationVisualizer=new ExplorationVisualizer(this.map)),this.showModeIndicator()}async apiCall(t,e={}){const n=this.config.getApiUrl(t);if(null===n){if("bengaluru-bounds"===t)return this.getMockBengaluruBounds();if("search?q="===t)return this.getMockSearchResults()}const i={...this.config.getHeaders(),...e.headers||{}};return this.log(`üì° API Call to: ${t}`,{url:n,mode:this.config.mode}),await fetch(n,{...e,headers:i})}getMockBengaluruBounds(){return{ok:!0,json:async()=>({north:13.1986,south:12.7342,east:77.8803,west:77.3691,center:[12.9716,77.5946]})}}getMockSearchResults(){return{ok:!0,json:async()=>({results:[{name:"Kempegowda International Airport",address:"KIAL Road",lat:13.1986,lng:77.7066},{name:"MG Road",address:"MG Road, Bengaluru",lat:12.9716,lng:77.5946},{name:"Electronic City",address:"Electronic City, Bengaluru",lat:12.8456,lng:77.6603},{name:"Whitefield",address:"Whitefield, Bengaluru",lat:12.9698,lng:77.75},{name:"Koramangala",address:"Koramangala, Bengaluru",lat:12.9352,lng:77.6245},{name:"Indiranagar",address:"Indiranagar, Bengaluru",lat:12.9784,lng:77.6408},{name:"Jayanagar",address:"Jayanagar, Bengaluru",lat:12.925,lng:77.5838},{name:"Malleswaram",address:"Malleswaram, Bengaluru",lat:13.006,lng:77.5707}]})}}showModeIndicator(){if("localhost"!==window.location.hostname&&"127.0.0.1"!==window.location.hostname&&!window.location.hostname.includes("local"))return;const t=this.config.getDisplayInfo(),e=document.createElement("div");e.className="fixed top-4 right-4 bg-white rounded-lg shadow-lg p-3 z-[10000] text-sm",e.innerHTML=`\n            <div class="flex items-center gap-2">\n                <span class="text-lg">${"local"===t.mode?"üè†":"üåê"}</span>\n                <div>\n                    <div class="font-semibold">${t.displayName}</div>\n                    <div class="text-xs text-gray-600">${t.description}</div>\n                    ${"remote"===t.mode?'<div class="text-xs text-blue-600 mt-1">üîê API Key: Active</div>':""}\n                </div>\n                <button onclick="window.demoConfig.setMode('${"local"===t.mode?"remote":"local"}')" \n                        class="ml-2 px-2 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600">\n                    Switch to ${"local"===t.mode?"Remote":"Local"}\n                </button>\n            </div>\n        `,document.body.appendChild(e)}initializeMap(){this.map=L.map("map",{center:[12.9716,77.5946],zoom:12,zoomControl:!0,attributionControl:!0}),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'¬© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:19}).addTo(this.map),this.map.on("click",t=>this.handleMapClick(t)),this.addBengaluruBounds(),setTimeout(()=>{this.showStatusMessage("üéØ Click anywhere on the map to set your start point!","info")},1e3)}async addBengaluruBounds(){let t={north:13.1729,south:12.7342,east:77.8826,west:77.3755};try{const e=await this.apiCall("bengaluru-bounds");if(e.ok){const n=await e.json();n&&n.north&&n.south&&n.east&&n.west&&(t=n,this.log("‚úÖ Loaded Bengaluru bounds from API:",t))}}catch(t){this.log("‚ö†Ô∏è Could not load bounds from API, using default:",t)}try{L.rectangle([[t.south,t.west],[t.north,t.east]],{color:"#667eea",weight:2,opacity:.6,fillColor:"#667eea",fillOpacity:.1,dashArray:"5, 5"}).addTo(this.map)}catch(t){}}setupEventListeners(){document.getElementById("clearRoute").addEventListener("click",()=>{this.clearRoute()}),this.setupNavigationEventListeners(),window.addEventListener("resize",()=>{const t=this.isMobile;this.isMobile=window.innerWidth<=768,t!==this.isMobile&&this.handleMobileToggle(),this.map&&setTimeout(()=>this.map.invalidateSize(),100)})}setupMobileHandlers(){const t=document.getElementById("mobileMenuToggle"),e=document.getElementById("mobileFab"),n=document.getElementById("sidebar");t&&t.addEventListener("click",t=>{t.stopPropagation(),this.toggleSidebar()}),e&&e.addEventListener("click",t=>{t.stopPropagation(),this.toggleSidebar()}),document.addEventListener("click",i=>{this.isMobile&&this.sidebarOpen&&n&&(n.contains(i.target)||t?.contains(i.target)||e?.contains(i.target)||this.toggleSidebar())})}toggleSidebar(){if(!this.isMobile)return;const t=document.getElementById("sidebar");t&&(this.sidebarOpen=!this.sidebarOpen,this.sidebarOpen?t.classList.add("open"):t.classList.remove("open"))}handleMobileToggle(){const t=document.getElementById("sidebar");!this.isMobile&&t&&(t.classList.remove("open"),this.sidebarOpen=!1)}async checkServerStatus(){const t=document.getElementById("statusIndicator"),e=document.getElementById("statusText"),n=t.querySelector(".status-dot");try{const t=`${this.config.config.apiBaseUrl.replace("/v1","")}/health`,i=this.config.getHeaders();this.log("üè• Health check:",{url:t,mode:this.config.mode});const s=await fetch(t,{headers:i}),a=await s.json();"ok"===a.status||"healthy"===a.status?(e.textContent=a.quantaroute_available?"QuantaRoute Ready":"QuantaRoute API Connected",n.classList.add("ready"),this.log("‚úÖ Server ready:",a)):e.textContent="Server Error"}catch(t){e.textContent="Server Offline"}}handleMapClick(t){const e=t.latlng,n=this.waypoints.findIndex(t=>null===t);if(-1!==n){this.waypoints[n]=e;const t=L.marker([e.lat,e.lng],{icon:this.createWaypointMarker(n)}).addTo(this.map);return this.waypointMarkers[n]=t,this.updateWaypointsList(),void(this.startMarker&&this.endMarker?this.showStatusMessage(`Waypoint ${n+1} set! Click "Direction" button to recalculate route.`,"success"):this.showStatusMessage(`Waypoint ${n+1} set!`,"success"))}0===this.clickCount?(this.setStartPoint(e),this.clickCount=1):1===this.clickCount?(this.setEndPoint(e),this.clickCount=2,this.showStatusMessage('‚úÖ End point set! Click "Direction" button to calculate route.',"success")):this.showStatusMessage('Route already exists! Use "Clear Route" button to reset, or click "Add Stop" to add waypoints.',"info")}showError(t){L.popup().setLatLng(this.map.getCenter()).setContent(`\n                <div style="color: #dc3545; text-align: center;">\n                    <strong>‚ö†Ô∏è Error</strong><br/>\n                    ${t}\n                </div>\n            `).openOn(this.map)}showStatusMessage(t,e="info"){const n=document.createElement("div");if(n.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: ${"success"===e?"#28a745":"error"===e?"#dc3545":"#667eea"};\n            color: white;\n            padding: 12px 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n            z-index: 10000;\n            font-weight: 500;\n            font-size: 14px;\n            max-width: 300px;\n            animation: slideIn 0.3s ease-out;\n        `,n.textContent=t,!document.querySelector("#statusAnimation")){const t=document.createElement("style");t.id="statusAnimation",t.textContent="\n                @keyframes slideIn {\n                    from { transform: translateX(100%); opacity: 0; }\n                    to { transform: translateX(0); opacity: 1; }\n                }\n                @keyframes slideOut {\n                    from { transform: translateX(0); opacity: 1; }\n                    to { transform: translateX(100%); opacity: 0; }\n                }\n            ",document.head.appendChild(t)}document.body.appendChild(n),setTimeout(()=>{n.style.animation="slideOut 0.3s ease-in",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},3e3)}createStartMarker(t){return L.divIcon({html:'<div class="custom-marker start-marker">\n                     <div class="marker-content">A</div>\n                   </div>',className:"custom-marker-container",iconSize:[32,32],iconAnchor:[16,32]})}createEndMarker(t){return L.divIcon({html:'<div class="custom-marker end-marker">\n                     <div class="marker-content">B</div>\n                   </div>',className:"custom-marker-container",iconSize:[32,32],iconAnchor:[16,32]})}createWaypointMarker(t){return L.divIcon({html:`<div class="custom-marker waypoint-marker">\n                     <div class="marker-content">${t+1}</div>\n                   </div>`,className:"custom-marker-container",iconSize:[28,28],iconAnchor:[14,28]})}setStartPoint(t){this.startMarker&&this.map.removeLayer(this.startMarker),this.startMarker=L.marker([t.lat,t.lng],{icon:this.createStartMarker(t),draggable:!0,autoPan:!0}).addTo(this.map),this.startMarker.on("dragstart",()=>{this.startMarker.setOpacity(.6)}),this.startMarker.on("dragend",t=>{this.startMarker.setOpacity(1);const e=t.target.getLatLng();this.handleMarkerDrag("start",e)});const e=document.getElementById("fromInput");e&&(e.value=`${t.lat.toFixed(4)}, ${t.lng.toFixed(4)}`);const n=document.getElementById("clearFromInput");n&&(n.style.display="flex"),this.showStatusMessage("‚úÖ Start point set! Now set your destination.","success");const i=document.getElementById("clearRoute");i&&(i.style.display="block"),this.updateRoutePointsDisplay()}setEndPoint(t){this.endMarker&&this.map.removeLayer(this.endMarker),this.endMarker=L.marker([t.lat,t.lng],{icon:this.createEndMarker(t),draggable:!0,autoPan:!0}).addTo(this.map),this.endMarker.on("dragstart",()=>{this.endMarker.setOpacity(.6)}),this.endMarker.on("dragend",t=>{this.endMarker.setOpacity(1);const e=t.target.getLatLng();this.handleMarkerDrag("end",e)});const e=document.getElementById("toInput");e&&(e.value=`${t.lat.toFixed(4)}, ${t.lng.toFixed(4)}`);const n=document.getElementById("clearToInput");n&&(n.style.display="flex"),this.showStatusMessage('‚úÖ Destination set! Click "Calculate Route" to navigate.',"success"),this.updateRoutePointsDisplay()}setupNavigationEventListeners(){document.querySelectorAll(".mode-btn").forEach(t=>{t.addEventListener("click",()=>{this.clearAlternativeRoutes(),this.routeLayer&&(this.map.removeLayer(this.routeLayer),this.routeLayer=null),this.hideElevationProfile(),document.querySelectorAll(".mode-btn").forEach(t=>t.classList.remove("active")),t.classList.add("active"),this.currentProfile=t.dataset.profile,this.log(`üîÑ Switched to ${this.currentProfile} profile`),"bicycle"===this.currentProfile?this.showStatusMessage("üö≤ Cycling mode: Works best with cycling-friendly locations like East Coast Park, Marina Bay Gardens, Park Connectors (PCN), and Tampines cycling town. May not find routes on busy roads without cycling infrastructure.","info"):"foot"===this.currentProfile?this.showStatusMessage("üö∂ Walking mode: Uses footpaths, walkways, and pedestrian areas. Avoids highways and major roads.","info"):"car"===this.currentProfile?this.showStatusMessage("üöó Driving mode: Uses roads and highways accessible to cars. Avoids footpaths and cycling-only areas.","info"):"motorcycle"===this.currentProfile&&this.showStatusMessage("üèçÔ∏è Motorcycle mode: Similar to car routing but may use lanes not accessible to larger vehicles.","info")})});const t=document.getElementById("fromInput"),e=document.getElementById("toInput");t&&(t.addEventListener("input",t=>{this.handleSearch(t.target.value,"from")}),t.addEventListener("keypress",t=>{if("Enter"===t.key){t.preventDefault();const e=t.target.value.trim();if(this.parseCoordinateInput(e)){this.handleManualCoordinateInput("start",e);const t=document.getElementById("fromResults");t&&(t.style.display="none")}}}),t.addEventListener("blur",t=>{const e=t.target.value.trim();e.includes(",")&&this.parseCoordinateInput(e)&&this.handleManualCoordinateInput("start",e)})),e&&(e.addEventListener("input",t=>{this.handleSearch(t.target.value,"to")}),e.addEventListener("keypress",t=>{if("Enter"===t.key){t.preventDefault();const e=t.target.value.trim();if(this.parseCoordinateInput(e)){this.handleManualCoordinateInput("end",e);const t=document.getElementById("toResults");t&&(t.style.display="none")}}}),e.addEventListener("blur",t=>{const e=t.target.value.trim();e.includes(",")&&this.parseCoordinateInput(e)&&this.handleManualCoordinateInput("end",e)}));const n=document.getElementById("swapLocations");n&&n.addEventListener("click",()=>{this.swapLocations()});const i=document.getElementById("addWaypoint");i&&i.addEventListener("click",()=>{this.addWaypoint()});const s=document.getElementById("clearFromInput");s&&s.addEventListener("click",()=>{this.clearStartPoint()});const a=document.getElementById("clearToInput");a&&a.addEventListener("click",()=>{this.clearEndPoint()});const o=document.getElementById("calculateRoute");o&&o.addEventListener("click",()=>{this.calculateRoute()});const r=document.getElementById("alternativesToggle"),l=document.getElementById("algorithmSelection");r&&(r.addEventListener("change",()=>{l&&(l.style.display=r.checked?"block":"none"),this.clearAlternativeRoutes();const t=document.getElementById("routeInfo");t&&(t.style.display="none");const e=document.getElementById("alternativeRoutes");e&&(e.style.display="none");const n=document.getElementById("performanceIndicator");n&&(n.style.display="none"),this.hideFloatingDirections(),this.hideElevationProfile();const i=r.checked?"enabled":"disabled";this.showStatusMessage(`üõ£Ô∏è Alternative routes ${i}. Click "Calculate Route" to see the difference!`,"info")}),l&&(l.style.display=r.checked?"block":"none"));const c=document.getElementById("algorithmDropdown"),d=document.getElementById("algorithmHelp");if(c&&d){const t={plateau:"üéØ <strong>Plateau A*:</strong> Finds routes with similar total cost using A* heuristics. <em>Best quality, profile-aware (5-10s).</em>",penalty:"üéØ <strong>Penalty A*:</strong> Penalizes optimal route edges to force maximum diversity. <em>Most diverse routes (5-10s).</em>",via_point:"üéØ <strong>Via Point A*:</strong> Routes through strategic intermediate waypoints. <em>Geographical diversity (5-10s).</em>",corridor:"üéØ <strong>Corridor A*:</strong> Explores routes within distance corridors from optimal. <em>Controlled exploration (5-10s).</em>",multi_objective:"üéØ <strong>Multi-Objective A*:</strong> Balances time, distance, scenery, and safety. <em>Best overall quality (10-15s).</em>",quantaroute:"‚ö° <strong>Fast Exclusion:</strong> Quick edge exclusion algorithm. <em>Simplest and fastest (~1s).</em>"};c.addEventListener("change",()=>{const e=c.value,n=t[e]||"Select an algorithm to see details.";d.innerHTML=n,["plateau","penalty","via_point","corridor","multi_objective"].includes(e)?(d.style.borderLeftColor="#e67e22",d.style.background="#fff3e0"):(d.style.borderLeftColor="#3498db",d.style.background="#f8f9fa")})}document.addEventListener("click",t=>{t.target.closest(".search-box")||document.querySelectorAll(".search-results").forEach(t=>{t.style.display="none"})}),this.loadPOIData(),setTimeout(()=>{this.setupCollapsibleInstructions()},100)}async loadPOIData(){try{const t=await this.apiCall("search?q=");if(t.ok){const e=await t.json();this.bengaluruPOIs=e.results||[]}}catch(t){this.bengaluruPOIs=[{name:"Kempegowda International Airport",address:"KIAL Road",lat:13.1986,lng:77.7066},{name:"MG Road",address:"MG Road",lat:12.9716,lng:77.5946},{name:"Electronic City",address:"Electronic City",lat:12.8456,lng:77.6603},{name:"Whitefield",address:"Whitefield",lat:12.9698,lng:77.75},{name:"Koramangala",address:"Koramangala",lat:12.9279,lng:77.6271},{name:"Indiranagar",address:"Indiranagar",lat:12.9719,lng:77.6412},{name:"JP Nagar",address:"JP Nagar",lat:12.9081,lng:77.5831},{name:"Marathahalli",address:"Marathahalli",lat:12.9591,lng:77.6974}]}}handleSearch(t,e){clearTimeout(this.searchTimeout);const n=document.getElementById(`${e}Results`);t.length<2?n.style.display="none":this.searchTimeout=setTimeout(()=>{this.performSearch(t,e,n)},300)}performSearch(t,e,n){let i=this.bengaluruPOIs.filter(e=>e.name.toLowerCase().includes(t.toLowerCase())||e.address.toLowerCase().includes(t.toLowerCase()));if("bicycle"===this.currentProfile&&(i=i.sort((t,e)=>{const n=t.cycling_friendly||"cycling"===t.category,i=e.cycling_friendly||"cycling"===e.category;return n&&!i?-1:!n&&i?1:0})),i=i.slice(0,5),0===i.length)return void(n.style.display="none");const s=i.map(t=>{const e=t.cycling_friendly||"cycling"===t.category,n="bicycle"===this.currentProfile&&e?' <span style="background: #10b981; color: white; padding: 2px 6px; border-radius: 10px; font-size: 10px;">üö≤ BIKE-FRIENDLY</span>':"";return`\n                <div class="search-result-item" data-lat="${t.lat}" data-lng="${t.lng}" data-name="${t.name}" style="padding: 10px; cursor: pointer; border-bottom: 1px solid #eee;">\n                    <div style="font-weight: 500; color: #1e293b;">${t.name}${n}</div>\n                    <div style="font-size: 12px; color: #64748b;">${t.address}</div>\n                </div>\n            `}).join("");n.innerHTML=s,n.style.display="block",n.style.position="absolute",n.style.top="100%",n.style.left="0",n.style.right="0",n.style.background="white",n.style.border="1px solid #e2e8f0",n.style.borderRadius="6px",n.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.1)",n.style.maxHeight="200px",n.style.overflowY="auto",n.style.zIndex="100",n.querySelectorAll(".search-result-item").forEach(t=>{t.addEventListener("click",()=>{const i=parseFloat(t.dataset.lat),s=parseFloat(t.dataset.lng),a=t.dataset.name;document.getElementById(`${e}Input`).value=a,n.style.display="none","from"===e?this.setStartPoint({lat:i,lng:s}):this.setEndPoint({lat:i,lng:s})}),t.addEventListener("mouseover",()=>{t.style.background="#f8fafc"}),t.addEventListener("mouseout",()=>{t.style.background="white"})})}swapLocations(){const t=document.getElementById("fromInput"),e=document.getElementById("toInput"),n=t.value;if(t.value=e.value,e.value=n,this.startMarker&&this.endMarker){const t=this.startMarker.getLatLng(),e=this.endMarker.getLatLng();this.setStartPoint(e),this.setEndPoint(t)}}parseCoordinateInput(t){if(!t||"string"!=typeof t)return null;const e=t.trim().replace(/lat[itude]*\s*:\s*/gi,"").replace(/lng|lon[gitude]*\s*:\s*/gi,"").match(/(-?\d+\.?\d*)\s*,\s*(-?\d+\.?\d*)/);if(!e||e.length<3)return null;const n=parseFloat(e[1]),i=parseFloat(e[2]);return isNaN(n)||isNaN(i)||n<-90||n>90||i<-180||i>180?null:{lat:n,lng:i}}handleManualCoordinateInput(t,e){const n="start"===t?document.getElementById("fromInput"):document.getElementById("toInput"),i=this.parseCoordinateInput(e);if(!i)return n&&(n.classList.add("invalid"),n.classList.remove("valid"),setTimeout(()=>n.classList.remove("invalid"),300)),this.showStatusMessage("‚ùå Invalid coordinates. Use format: lat, lng (e.g., 1.3521, 103.8198)","error"),!1;n&&(n.classList.add("valid"),n.classList.remove("invalid"),setTimeout(()=>n.classList.remove("valid"),2e3));const s=L.latLng(i.lat,i.lng);return"start"===t?(this.setStartPoint(s),this.clickCount=Math.max(1,this.clickCount),this.showStatusMessage("‚úÖ Start point updated!","success")):(this.setEndPoint(s),this.clickCount=Math.max(2,this.clickCount),this.showStatusMessage('‚úÖ End point set! Click "Direction" button to calculate route.',"success")),!0}handleMarkerDrag(t,e){const n="start"===t?document.getElementById("fromInput"):document.getElementById("toInput");n&&(n.value=`${e.lat.toFixed(6)}, ${e.lng.toFixed(6)}`);const i="start"===t?"Start":"End";this.showStatusMessage(`üìç ${i} point moved! Click "Direction" to recalculate route.`,"info")}clearStartPoint(){this.startMarker&&(this.map.removeLayer(this.startMarker),this.startMarker=null);const t=document.getElementById("fromInput");t&&(t.value="",t.classList.remove("valid","invalid"));const e=document.getElementById("clearFromInput");e&&(e.style.display="none"),this.clickCount>0&&this.clickCount--,this.showStatusMessage("Start point cleared","info"),this.updateRoutePointsDisplay()}clearEndPoint(){this.endMarker&&(this.map.removeLayer(this.endMarker),this.endMarker=null);const t=document.getElementById("toInput");t&&(t.value="",t.classList.remove("valid","invalid"));const e=document.getElementById("clearToInput");e&&(e.style.display="none"),this.clickCount>1&&this.clickCount--,this.showStatusMessage("End point cleared","info"),this.updateRoutePointsDisplay()}addWaypoint(){const t=document.getElementById("waypointsList");if(!t)return;const e=this.waypoints.length,n=document.createElement("div");n.className="waypoint-item",n.style.cssText="display: flex; align-items: center; gap: 12px; padding: 8px; background: #f8fafc; border-radius: 6px; margin-bottom: 6px;";const i=document.createElement("button");i.textContent="√ó",i.style.cssText="background: none; border: none; color: #94a3b8; cursor: pointer; padding: 4px; font-size: 20px;",i.addEventListener("click",()=>this.removeWaypoint(e));const s=document.createElement("div");s.style.cssText="width: 20px; height: 20px; border-radius: 50%; background: #f59e0b; display: flex; align-items: center; justify-content: center; color: white; font-size: 10px; font-weight: 600;",s.textContent=e+1;const a=document.createElement("div");a.style.cssText="flex: 1; font-size: 13px; color: #475569;",a.textContent="Click on map to set waypoint",n.appendChild(s),n.appendChild(a),n.appendChild(i),t.appendChild(n),this.waypoints.push(null),this.showStatusMessage(`Waypoint ${e+1} added! Click on the map to set its location.`,"success")}removeWaypoint(t){this.waypointMarkers[t]&&this.map.removeLayer(this.waypointMarkers[t]),this.waypoints.splice(t,1),this.waypointMarkers.splice(t,1),this.showStatusMessage(`Waypoint ${t+1} removed!`,"success"),this.updateWaypointsList()}updateWaypointsList(){const t=document.getElementById("waypointsList");t&&(t.innerHTML="",this.waypoints.forEach((e,n)=>{const i=document.createElement("div");i.className="waypoint-item",i.style.cssText="display: flex; align-items: center; gap: 12px; padding: 8px; background: #f8fafc; border-radius: 6px; margin-bottom: 6px;";const s=document.createElement("button");s.textContent="√ó",s.style.cssText="background: none; border: none; color: #94a3b8; cursor: pointer; padding: 4px; font-size: 20px;",s.addEventListener("click",()=>this.removeWaypoint(n));const a=document.createElement("div");a.style.cssText="width: 20px; height: 20px; border-radius: 50%; background: #f59e0b; display: flex; align-items: center; justify-content: center; color: white; font-size: 10px; font-weight: 600;",a.textContent=n+1;const o=document.createElement("div");o.style.cssText="flex: 1; font-size: 13px; color: #475569;",o.textContent=e?`${e.lat.toFixed(4)}, ${e.lng.toFixed(4)}`:"Click on map to set waypoint",i.appendChild(a),i.appendChild(o),i.appendChild(s),t.appendChild(i)}),this.updateRoutePointsDisplay())}updateRoutePointsDisplay(){const t=document.getElementById("routePointsDisplay");if(!t)return;t.innerHTML="";const e=[];if(this.startMarker){const t=this.startMarker.getLatLng();e.push({type:"start",latlng:t,index:-1})}if(this.waypoints.forEach((t,n)=>{t&&e.push({type:"waypoint",latlng:t,index:n})}),this.endMarker){const t=this.endMarker.getLatLng();e.push({type:"end",latlng:t,index:-1})}0!==e.length?(t.style.display="flex",e.forEach((n,i)=>{String.fromCharCode(65+i);const s=i===e.length-1,a=document.createElement("div");a.className="route-point-card";const o=document.createElement("span");o.className=`route-point-label ${n.type}`,o.textContent="start"===n.type?"Start":"end"===n.type?"Destination":"Stop",o.style.cssText=`\n                font-weight: 600;\n                font-size: 11px;\n                color: ${"start"===n.type?"#52c41a":"end"===n.type?"#f5222d":"#1890ff"};\n                margin-right: 8px;\n            `;const r=document.createElement("span");if(r.className="route-point-coords",r.textContent=`${n.latlng.lat.toFixed(5)}, ${n.latlng.lng.toFixed(5)}`,r.style.cssText="flex: 1; font-size: 13px; color: #333;","waypoint"===n.type){const t=document.createElement("div");if(t.className="route-point-controls",t.style.cssText="display: flex; gap: 4px; margin-left: 8px;",i>1){const e=document.createElement("button");e.innerHTML="‚Üë",e.title="Move up",e.style.cssText="background: none; border: none; color: #999; cursor: pointer; padding: 0 4px; font-size: 14px;",e.addEventListener("click",()=>this.moveWaypointUp(n.index)),t.appendChild(e)}if(!s){const e=document.createElement("button");e.innerHTML="‚Üì",e.title="Move down",e.style.cssText="background: none; border: none; color: #999; cursor: pointer; padding: 0 4px; font-size: 14px;",e.addEventListener("click",()=>this.moveWaypointDown(n.index)),t.appendChild(e)}const e=document.createElement("button");e.innerHTML="‚úï",e.title="Remove",e.style.cssText="background: none; border: none; color: #f5222d; cursor: pointer; padding: 0 4px; font-size: 16px;",e.addEventListener("click",()=>this.removeWaypoint(n.index)),t.appendChild(e),a.appendChild(o),a.appendChild(r),a.appendChild(t)}else a.appendChild(o),a.appendChild(r);a.style.cssText="\n                display: flex;\n                align-items: center;\n                padding: 8px 12px;\n                background: #f9f9f9;\n                border: 1px solid #e0e0e0;\n                border-radius: 6px;\n                margin-bottom: 6px;\n            ",t.appendChild(a)})):t.style.display="none"}moveWaypointUp(t){if(t<=0)return;const e=this.waypoints[t];this.waypoints[t]=this.waypoints[t-1],this.waypoints[t-1]=e;const n=this.waypointMarkers[t];this.waypointMarkers[t]=this.waypointMarkers[t-1],this.waypointMarkers[t-1]=n,this.waypointMarkers[t]&&this.waypointMarkers[t].setIcon(this.createWaypointMarker(t)),this.waypointMarkers[t-1]&&this.waypointMarkers[t-1].setIcon(this.createWaypointMarker(t-1)),this.updateWaypointsList()}moveWaypointDown(t){if(t>=this.waypoints.length-1)return;const e=this.waypoints[t];this.waypoints[t]=this.waypoints[t+1],this.waypoints[t+1]=e;const n=this.waypointMarkers[t];this.waypointMarkers[t]=this.waypointMarkers[t+1],this.waypointMarkers[t+1]=n,this.waypointMarkers[t]&&this.waypointMarkers[t].setIcon(this.createWaypointMarker(t)),this.waypointMarkers[t+1]&&this.waypointMarkers[t+1].setIcon(this.createWaypointMarker(t+1)),this.updateWaypointsList()}showElevationProfile(t){this.log("üîç showElevationProfile called",{profile:this.currentProfile,hasData:!!t.elevation_profile});const e=document.getElementById("elevationPanel");if(e)if("bicycle"===this.currentProfile||"foot"===this.currentProfile){const n=t.elevation_profile;if(!n||0===n.length)return this.log("‚ö†Ô∏è No elevation data - hiding panel"),void(e.style.display="none");if(this.log("üìä Elevation data:",{length:n.length,hasStats:!!t.elevation_stats}),n&&n.length>0){if(this.updateElevationStats(n,t),e.style.display="block",e.style.visibility="visible",e.style.opacity="1",e.style.zIndex="1000",this.elevationChart){try{this.elevationChart.destroy()}catch(t){}this.elevationChart=null}try{const e=document.getElementById("elevationChart");if(!e)return;e.style.display="block",e.style.width="100%",e.style.height="140px",e.width=e.offsetWidth||400,e.height=140,this.drawSimpleElevationChart(e,n,t)}catch(t){}this.setupElevationControls()}else e.style.display="none"}else e.style.display="none"}updateElevationStats(t,e=null){if(e&&e.elevation_stats){const t=e.elevation_stats;this.log("üìä Using backend elevation stats");const n=document.getElementById("minElevation"),i=document.getElementById("maxElevation"),s=document.getElementById("elevationGain");return n&&(n.textContent=`${Math.round(t.min_elevation_m)}m`),i&&(i.textContent=`${Math.round(t.max_elevation_m)}m`),void(s&&(s.textContent=`${Math.round(t.total_ascent_m)}m`))}const n=t.map(t=>t.elevation_m),i=Math.min(...n),s=Math.max(...n);let a=0;for(let t=1;t<n.length;t++){const e=n[t]-n[t-1];e>0&&(a+=e)}this.log("üìä Calculated elevation stats");const o=document.getElementById("minElevation"),r=document.getElementById("maxElevation"),l=document.getElementById("elevationGain");o&&(o.textContent=`${Math.round(i)}m`),r&&(r.textContent=`${Math.round(s)}m`),l&&(l.textContent=`${Math.round(a)}m`)}setupElevationControls(){const t=document.getElementById("elevationMinimize");t&&!t.hasAttribute("data-listener-added")&&(t.addEventListener("click",()=>{this.toggleElevationPanel()}),t.setAttribute("data-listener-added","true"))}toggleElevationPanel(){const t=document.getElementById("elevationPanel");if(t){t.classList.toggle("minimized");const e=document.getElementById("elevationMinimize").querySelector("svg path");t.classList.contains("minimized")?e.setAttribute("d","M18 15l-6-6-6 6"):e.setAttribute("d","M6 9l6 6 6-6")}}hideElevationProfile(){const t=document.getElementById("elevationPanel");if(t&&(t.style.display="none",t.classList.remove("minimized")),this.elevationChart)try{this.elevationChart.destroy(),this.elevationChart=null}catch(t){}}drawSimpleElevationChart(t,e,n){if(!t||!e||0===e.length)return void this.log("‚ö†Ô∏è Canvas or elevation data missing");const i=t.getContext("2d");if(!i)return;const s=t.getBoundingClientRect(),a=window.devicePixelRatio||1;t.width=(s.width||t.offsetWidth||400)*a,t.height=180*a,t.style.width=t.width/a+"px",t.style.height="180px",i.scale(a,a);const o=t.width/a,r=t.height/a,l=i.createLinearGradient(0,0,0,r);l.addColorStop(0,"#fafbfc"),l.addColorStop(1,"#f8fafc"),i.fillStyle=l,i.fillRect(0,0,o,r);const c=60,d=40,h=o-c-30,u=r-d-50;if(h<=0||u<=0)return;const m=this.normalizeElevationData(e,n.distance_km);this.log(`üìä Normalized data: ${e.length} ‚Üí ${m.length} points`);const p=m.map(t=>t.elevation_m),g=(m.map(t=>t.distance_km),Math.max(0,Math.min(...p)-5)),y=Math.max(...p)+10,f=n.distance_km,v=y-g||1,k=this.getProfileConfig(this.currentProfile);i.strokeStyle="rgba(0, 0, 0, 0.08)",i.lineWidth=1;for(let t=0;t<=6;t++){const e=d+u*t/6;i.beginPath(),i.moveTo(c,e),i.lineTo(c+h,e),i.stroke()}for(let t=0;t<=5;t++){const e=c+h*t/5;i.beginPath(),i.moveTo(e,d),i.lineTo(e,d+u),i.stroke()}const x=i.createLinearGradient(0,d,0,d+u);x.addColorStop(0,k.fillTop),x.addColorStop(1,k.fillBottom),i.fillStyle=x,i.beginPath(),i.moveTo(c,d+u);const w=m.map((t,e)=>({x:c+h*t.distance_km/f,y:d+u-(t.elevation_m-g)/v*u}));if(w.length>2){i.lineTo(w[0].x,w[0].y);for(let t=1;t<w.length-1;t++){const e=w[t-1].x+.3*(w[t].x-w[t-1].x),n=w[t-1].y,s=w[t].x-.3*(w[t+1].x-w[t].x),a=w[t].y;i.bezierCurveTo(e,n,s,a,w[t].x,w[t].y)}i.lineTo(w[w.length-1].x,w[w.length-1].y)}else w.forEach((t,e)=>{i.lineTo(t.x,t.y)});i.lineTo(w[w.length-1].x,d+u),i.closePath(),i.fill(),i.shadowColor=k.shadowColor,i.shadowBlur=4,i.strokeStyle=k.lineColor,i.lineWidth=3,i.lineCap="round",i.lineJoin="round",i.beginPath(),w.forEach((t,e)=>{0===e?i.moveTo(t.x,t.y):i.lineTo(t.x,t.y)}),i.stroke(),i.shadowBlur=0,i.fillStyle="#4a5568",i.font='bold 12px -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',i.textAlign="right",i.textBaseline="middle";for(let t=0;t<=6;t++){const e=g+v*t/6,n=d+u-u*t/6,s=e>=1e3?`${(e/1e3).toFixed(1)}km`:`${Math.round(e)}m`;i.fillText(s,48,n)}i.textAlign="center",i.textBaseline="top";for(let t=0;t<=5;t++){const e=f*t/5,n=c+h*t/5,s=e>=10?`${e.toFixed(0)}km`:`${e.toFixed(1)}km`;i.fillText(s,n,d+u+15)}i.fillStyle="#718096",i.font='11px -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',i.save(),i.translate(15,d+u/2),i.rotate(-Math.PI/2),i.textAlign="center",i.fillText("Elevation",0,0),i.restore(),i.textAlign="center",i.fillText("Distance",c+h/2,r-15),i.fillStyle="#2d3748",i.font='bold 16px -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',i.textAlign="left",i.textBaseline="top";const M=`${k.icon} ${n.distance_km.toFixed(1)}km ${k.name} Route`;i.fillText(M,c,15);const b=p.reduce((t,e,n)=>n>0&&e>p[n-1]?t+(e-p[n-1]):t,0),E=p.reduce((t,e,n)=>n>0&&e<p[n-1]?t+(p[n-1]-e):t,0);i.fillStyle="#718096",i.font='bold 11px -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',i.textAlign="right";const L=[`‚¨Ü ${b.toFixed(0)}m climb`,`‚¨á ${E.toFixed(0)}m descent`,`üìê ${g.toFixed(0)}-${y.toFixed(0)}m range`].join(" ‚Ä¢ ");if(i.fillText(L,o-30,15),"bicycle"===this.currentProfile){const t=b/(1e3*n.distance_km)*100;let e="Easy",s="#48bb78";t>8?(e="Very Hard",s="#e53e3e"):t>6?(e="Hard",s="#ed8936"):t>4?(e="Moderate",s="#ecc94b"):t>2&&(e="Easy+",s="#9ae6b4"),i.fillStyle=s,i.font='bold 10px -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',i.textAlign="right",i.fillText(`${e} (${t.toFixed(1)}% avg)`,o-30,32)}}getProfileConfig(t){const e={bicycle:{name:"Cycling",icon:"üö≤",lineColor:"#3182ce",fillTop:"rgba(49, 130, 206, 0.4)",fillBottom:"rgba(49, 130, 206, 0.1)",shadowColor:"rgba(49, 130, 206, 0.3)"},foot:{name:"Walking",icon:"üö∂",lineColor:"#38a169",fillTop:"rgba(56, 161, 105, 0.4)",fillBottom:"rgba(56, 161, 105, 0.1)",shadowColor:"rgba(56, 161, 105, 0.3)"},car:{name:"Driving",icon:"üöó",lineColor:"#e53e3e",fillTop:"rgba(229, 62, 62, 0.4)",fillBottom:"rgba(229, 62, 62, 0.1)",shadowColor:"rgba(229, 62, 62, 0.3)"},motorcycle:{name:"Motorcycle",icon:"üèçÔ∏è",lineColor:"#dc2626",fillTop:"rgba(220, 38, 38, 0.4)",fillBottom:"rgba(220, 38, 38, 0.1)",shadowColor:"rgba(220, 38, 38, 0.3)"}};return e[t]||e.bicycle}normalizeElevationData(t,e){if(!t||t.length<2)return[];this.log(`üîß Normalizing: ${t.length} points for ${e}km`);const n=t.map((n,i)=>({...n,distance_km:i/(t.length-1)*e})),i=[],s=Math.max(.05,e/100);n.forEach((t,e)=>{(0===e||e===n.length-1||0===i.length||t.distance_km-i[i.length-1].distance_km>=s||Math.abs(t.elevation_m-i[i.length-1].elevation_m)>=3)&&i.push(t)});const a=Math.max(20,Math.min(100,Math.ceil(10*e)));if(i.length>a){const t=Math.ceil(i.length/a),e=[];for(let n=0;n<i.length;n+=t)e.push(i[n]);return e[e.length-1]!==i[i.length-1]&&e.push(i[i.length-1]),this.log(`üìâ Further optimized: ${i.length} ‚Üí ${e.length} points`),e}return this.log(`‚úÖ Optimized: ${t.length} ‚Üí ${i.length} points`),i}haversineDistance(t,e,n,i){const s=this.toRadians(n-t),a=this.toRadians(i-e),o=Math.sin(s/2)*Math.sin(s/2)+Math.cos(this.toRadians(t))*Math.cos(this.toRadians(n))*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))*6371}toRadians(t){return t*(Math.PI/180)}drawRouteWithConnectors(t,e,n,i=!0,s="#3b82f6"){if(!t||t.length<2)return t;const a={lat:t[0][0],lng:t[0][1]},o={lat:t[t.length-1][0],lng:t[t.length-1][1]},r=(e?1e3*this.haversineDistance(e.lat,e.lng,a.lat,a.lng):0)>50,l=(n?1e3*this.haversineDistance(n.lat,n.lng,o.lat,o.lng):0)>50;r&&e&&this.drawConnectorLine([e.lat,e.lng],[a.lat,a.lng],s,"start"),l&&n&&this.drawConnectorLine([n.lat,n.lng],[o.lat,o.lng],s,"end");let c=[...t];return r&&e&&(c[0]=[e.lat,e.lng]),l&&n&&(c[c.length-1]=[n.lat,n.lng]),c}drawConnectorLine(t,e,n,i){this.connectorLayers||(this.connectorLayers=[]);const s=L.polyline([t,e],{color:n,weight:3,opacity:.7,dashArray:"8, 8",lineCap:"round",lineJoin:"round",className:"connector-line"}).addTo(this.map),a="start"===i?"üìç Connection from clicked point to route start":"üéØ Connection from route end to clicked point";s.bindPopup(a,{closeButton:!1,offset:L.point(0,-10),className:"connector-popup"}),s.on("mouseover",function(){this.openPopup(),setTimeout(()=>{this.closePopup()},2500)}),s.on("click",function(){this.openPopup(),setTimeout(()=>{this.closePopup()},5e3)}),this.connectorLayers.push(s)}clearConnectorLines(){this.connectorLayers&&(this.connectorLayers.forEach(t=>{this.map.hasLayer(t)&&this.map.removeLayer(t)}),this.connectorLayers=[])}clearDistanceMarkers(){this.distanceMarkers&&(this.distanceMarkers.forEach(t=>{this.map.removeLayer(t)}),this.distanceMarkers=[])}addDistanceMarkersToRoute(t,e){if(this.clearDistanceMarkers(),!t||t.length<2||e<=0)return;this.distanceMarkers||(this.distanceMarkers=[]);let n=e<=2?.5:e<=10?1:2,i=Math.floor(e/n);i>10&&(n=e/10,i=10);let s=[0],a=0;for(let e=1;e<t.length;e++)a+=this.haversineDistance(t[e-1][0],t[e-1][1],t[e][0],t[e][1]),s.push(a);for(let o=1;o<=i;o++){const i=o*n;if(i>=e)break;const r=i/e*a;let l,c=0;for(let t=1;t<s.length;t++)if(s[t]>=r){c=t-1;break}if(c<t.length-1){const e=s[c],n=s[c+1]-e;if(n>0){const i=(r-e)/n;l=[t[c][0]+i*(t[c+1][0]-t[c][0]),t[c][1]+i*(t[c+1][1]-t[c][1])]}else l=t[c]}else l=t[t.length-1];const d=L.marker(l,{icon:this.createDistanceMarker(i),zIndexOffset:1e3}).addTo(this.map),h=i<1?`${Math.round(1e3*i)}m`:Math.round(10*i)/10+"km";d.bindTooltip(`üìè ${h} from start`,{permanent:!1,direction:"top",offset:[0,-10],className:"distance-marker-tooltip"}),this.distanceMarkers.push(d)}this.log(`üìè Added ${this.distanceMarkers.length} distance markers`)}createDistanceMarker(t){const e=t<1?`${Math.round(1e3*t)}m`:Math.round(10*t)/10+"km";return L.divIcon({html:`<div class="distance-marker">\n                     <div class="distance-marker-dot"></div>\n                     <div class="distance-marker-label">${e}</div>\n                   </div>`,className:"distance-marker-container",iconSize:[60,20],iconAnchor:[30,10]})}setupCollapsibleInstructions(){const t=document.getElementById("instructionsHeader"),e=document.getElementById("instructionsToggle"),n=document.querySelector(".instructions-card");if(t&&e&&n){t.addEventListener("click",()=>{this.toggleInstructions()}),e.addEventListener("click",t=>{t.stopPropagation(),this.toggleInstructions()});const i=localStorage.getItem("instructionsCollapsed"),s=null===i||"true"===i;if(s){n.classList.add("collapsed");const t=n.querySelector(".card-content");t&&(t.style.maxHeight="0px",t.style.opacity="0",t.style.overflow="hidden",t.style.paddingTop="0px",t.style.paddingBottom="0px")}e.setAttribute("aria-expanded",!s)}}toggleInstructions(){const t=document.querySelector(".instructions-card"),e=document.getElementById("instructionsToggle");if(t&&e){t.classList.toggle("collapsed");const n=t.classList.contains("collapsed");e.setAttribute("aria-expanded",!n);const i=t.querySelector(".card-content");i&&(n?(i.style.maxHeight="0px",i.style.opacity="0",i.style.overflow="hidden",i.style.paddingTop="0px",i.style.paddingBottom="0px"):(i.style.maxHeight="500px",i.style.opacity="1",i.style.overflow="hidden",i.style.paddingTop="1.25rem",i.style.paddingBottom="1.25rem")),localStorage.setItem("instructionsCollapsed",n)}}showFloatingDirections(t){this.log("üìç Showing floating directions");const e=document.getElementById("floatingDirections"),n=document.getElementById("directionsContent"),i=document.getElementById("summaryDistance"),s=document.getElementById("summaryTime");if(!e||!n)return;i&&s&&(i.textContent=`${t.distance_km?.toFixed(1)}km`,s.textContent=this.formatDuration(t.duration_min));const a=this.generateEnhancedInstructions(t);n.innerHTML="",a.forEach((t,e)=>{const i=this.createDirectionStep(t,e+1);n.appendChild(i)}),e.classList.add("show")}hideFloatingDirections(){const t=document.getElementById("floatingDirections");t&&t.classList.remove("show"),this.clearHighlightedSegment()}highlightRouteSegment(t,e){if(t&&0!==t.length&&(this.clearHighlightedSegment(),this.currentHighlightedSegment=L.polyline(t,{color:"#ffef44",weight:6,opacity:.9,smoothFactor:1,className:"highlighted-route-segment"}).addTo(this.map),this.currentHighlightedSegment.setStyle({color:"#ff4444",weight:8,opacity:.8}),this.updateInstructionSelection(e),t.length>1)){const e=L.latLngBounds(t);this.map.getBounds().contains(e)||this.map.fitBounds(e,{padding:[50,50],maxZoom:16,animate:!0,duration:.8})}}clearHighlightedSegment(){this.currentHighlightedSegment&&(this.map.removeLayer(this.currentHighlightedSegment),this.currentHighlightedSegment=null),this.updateInstructionSelection(-1)}updateInstructionSelection(t){document.querySelectorAll(".directions-step").forEach((e,n)=>{e.classList.remove("selected"),n===t&&e.classList.add("selected")}),this.selectedInstructionIndex=t}generateEnhancedInstructions(t){const e=[];return t.instructions&&t.instructions.length>0?t.instructions.forEach((n,i)=>{const s=this.enhanceInstruction(n,i,t);e.push(s)}):e.push(...this.generateBasicInstructions(t)),e}enhanceInstruction(t,e,n){let i=this.detectTurnType(t.instruction),s=t.name||t.street_name||this.extractStreetName(t.instruction);this.log(`üõ£Ô∏è Instruction ${e+1}: ${s||"no street name"}`);let a=this.injectStreetNameIntoInstruction(t.instruction,s,i),o=[];return t.geometry&&t.geometry.coordinates&&"LineString"===t.geometry.type&&(o=t.geometry.coordinates.map(t=>[t[1],t[0]])),{instruction:a,distance_m:t.distance||t.distance_m||0,duration_s:t.duration||t.duration_s||0,turn_type:i,street_name:s,location:t.maneuver?.location||t.location||null,segment_coordinates:o||t.segment_coordinates||[]}}generateBasicInstructions(t){const e=[],n=t.distance_km||0,i=t.duration_min||0;if(t.path&&t.path.length>2){const e=this.generatePathBasedInstructions(t.path,n,i,this.currentProfile);if(e.length>0)return e}const s=this.guessRoadTypeFromDistance(n,this.currentProfile);if(e.push({instruction:`Head north on ${s}`,distance_m:Math.round(1e3*n*.6),duration_s:Math.round(60*i*.6),turn_type:"straight",street_name:s,location:null}),n>2){const t=n>5?"Major Highway":"Primary Road";e.push({instruction:`Continue on ${t}`,distance_m:Math.round(1e3*n*.4),duration_s:Math.round(60*i*.4),turn_type:"continue",street_name:t,location:null})}return e.push({instruction:"Arrive at your destination",distance_m:0,duration_s:0,turn_type:"arrive",street_name:"destination",location:null}),e}generatePathBasedInstructions(t,e,n,i){const s=[];try{return this.analyzeRouteSegments(t,e).forEach((t,e)=>{const n=this.guessRoadTypeFromDistance(t.distance_m/1e3,i);let a;a=0===e?`Head north on ${n}`:`${this.detectTurnFromBearing(t.bearing_change)} onto ${n}`,s.push({instruction:a,distance_m:t.distance_m,duration_s:t.duration_s,turn_type:this.mapTurnDirectionToType(t.bearing_change||0),street_name:n,location:t.start_point})}),s}catch(t){return[]}}analyzeRouteSegments(t,e){const n=[];if(t.length<3)return[{start_point:t[0],distance_m:1e3*e,duration_s:60*e/30,bearing_change:0}];let i=0;for(let e=2;e<t.length;e++){const s=this.calculateBearing(t[e-2],t[e-1]),a=this.calculateBearing(t[e-1],t[e]),o=this.normalizeBearingDiff(a-s);if(Math.abs(o)>30||e===t.length-1){const s=t.slice(i,e),a=this.calculatePathDistance(s);n.push({start_point:t[i],distance_m:a,duration_s:Math.round(a/1e3*60/25),bearing_change:o}),i=e-1}}return n}calculateBearing(t,e){const n=t[0]*Math.PI/180,i=e[0]*Math.PI/180,s=(e[1]-t[1])*Math.PI/180,a=Math.sin(s)*Math.cos(i),o=Math.cos(n)*Math.sin(i)-Math.sin(n)*Math.cos(i)*Math.cos(s);return 180*Math.atan2(a,o)/Math.PI}normalizeBearingDiff(t){for(;t>180;)t-=360;for(;t<-180;)t+=360;return t}calculatePathDistance(t){let e=0;for(let n=1;n<t.length;n++)e+=1e3*this.haversineDistance(t[n-1][0],t[n-1][1],t[n][0],t[n][1]);return e}detectTurnFromBearing(t){return t?t>90?"Turn right":t<-90?"Turn left":t>30?"Keep right":t<-30?"Keep left":"Continue straight":"Continue straight"}mapTurnDirectionToType(t){return t?t>90?"right":t<-90?"left":Math.abs(t)>30?t>0?"right":"left":"straight":"straight"}guessRoadTypeFromDistance(t,e){return"bicycle"===e?t>3?"Cycle Path":t>1?"Park Connector":"Cycling Route":"foot"===e?t>2?"Walking Path":t>.5?"Pedestrian Way":"Walkway":t>5?"Major Highway":t>2?"Primary Road":t>.8?"Secondary Road":"Local Road"}detectTurnType(t){const e=t.toLowerCase();return e.includes("turn left")||e.includes("left onto")?"left":e.includes("turn right")||e.includes("right onto")?"right":e.includes("u-turn")||e.includes("u turn")?"u-turn":e.includes("continue")||e.includes("keep")?"continue":e.includes("arrive")||e.includes("destination")?"arrive":"straight"}extractStreetName(t){const e=[/onto ([A-Za-z\s]+(?:Road|Street|Avenue|Drive|Lane|Way|Boulevard|Place))/i,/on ([A-Za-z\s]+(?:Road|Street|Avenue|Drive|Lane|Way|Boulevard|Place))/i,/along ([A-Za-z\s]+(?:Road|Street|Avenue|Drive|Lane|Way|Boulevard|Place))/i,/onto ([A-Za-z\s]+)/i];for(const n of e){const e=t.match(n);if(e&&e[1])return e[1].trim()}return null}injectStreetNameIntoInstruction(t,e,n){if(!t)return t;if(!e||""===e)return t;const i=this.cleanStreetName(e),s=t.toLowerCase(),a=i.toLowerCase();if(s.includes(a)){const e=new RegExp(`(${i})`,"gi");return t.replace(e,"<strong>$1</strong>")}return this.buildInstructionWithStreetName(t,i,n)}cleanStreetName(t){if(!t)return"";let e=t.replace(/^the\s+/i,"");return/^(route|road|way|path)$/i.test(e.trim())?"":e}buildInstructionWithStreetName(t,e,n){if(!e)return t;const i=t.toLowerCase();return i.includes("turn left")&&!i.includes(" onto ")?t.replace(/turn left/i,`Turn left onto <strong>${e}</strong>`):i.includes("turn right")&&!i.includes(" onto ")?t.replace(/turn right/i,`Turn right onto <strong>${e}</strong>`):i.includes("keep left")&&!i.includes(" on ")?t.replace(/keep left/i,`Keep left on <strong>${e}</strong>`):i.includes("keep right")&&!i.includes(" on ")?t.replace(/keep right/i,`Keep right on <strong>${e}</strong>`):i.includes("continue")&&!i.includes(" on ")?t.replace(/continue/i,`Continue on <strong>${e}</strong>`):i.includes("head ")&&!i.includes(" on ")?t.replace(/head\s+(\w+)/i,`Head $1 on <strong>${e}</strong>`):`${t} <span style="color: #6b7280;">on <strong>${e}</strong></span>`}formatInstructionText(t,e){return e?t.replace(e,`<strong>${e}</strong>`):t}createDirectionStep(t,e){const n=document.createElement("div");n.className="directions-step";const i=t.distance_m>0?t.distance_m>=1e3?`${(t.distance_m/1e3).toFixed(1)}km`:`${Math.round(t.distance_m)}m`:"",s=t.street_name&&""!==t.street_name&&"route"!==t.street_name&&"destination"!==t.street_name&&"the road"!==t.street_name;return n.innerHTML=`\n            <div class="step-number">${e}</div>\n            <div class="step-icon">\n                <div class="turn-icon ${t.turn_type}"></div>\n            </div>\n            <div class="step-content">\n                <div class="step-instruction">${t.instruction}</div>\n                <div class="step-details">\n                    ${i?`<span class="step-distance">${i}</span>`:""}\n                    ${s?`<span style="color: #6b7280; font-weight: 500;">‚Ä¢ ${t.street_name}</span>`:""}\n                    <span class="segment-hint" style="color: #9ca3af; font-size: 11px; margin-left: 8px;">click to highlight</span>\n                </div>\n            </div>\n        `,n.addEventListener("click",()=>{if(t.segment_coordinates&&t.segment_coordinates.length>0)this.highlightRouteSegment(t.segment_coordinates,e-1),n.style.backgroundColor="#fef3f3",setTimeout(()=>{n.style.backgroundColor=""},200);else{this.log("‚ö†Ô∏è No segment coordinates for:",t.instruction);const e=n.querySelector(".segment-hint");e&&(e.textContent="no segment data",e.style.color="#f87171",setTimeout(()=>{e.textContent="click to highlight",e.style.color="#9ca3af"},2e3))}}),n.addEventListener("mouseenter",()=>{t.segment_coordinates&&t.segment_coordinates.length>0&&(n.style.cursor="pointer",n.style.backgroundColor="#f9fafb")}),n.addEventListener("mouseleave",()=>{this.selectedInstructionIndex!==e-1&&(n.style.backgroundColor="")}),n}getProfileColor(t){return{car:"#00008B",bicycle:"#10b981",foot:"#f59e0b",motorcycle:"#A544EF"}[t]||"#64748b"}getAlternativeColor(t,e){const n=this.getProfileColor(e||this.currentProfile).replace("#",""),i=parseInt(n.substr(0,2),16),s=parseInt(n.substr(2,2),16),a=parseInt(n.substr(4,2),16),o=[.4,.6,.8],r=o[t%o.length];return`rgb(${Math.min(255,Math.floor(i+(255-i)*r))}, ${Math.min(255,Math.floor(s+(255-s)*r))}, ${Math.min(255,Math.floor(a+(255-a)*r))})`}async calculateOptimizedRoute(){const t=document.getElementById("loadingOverlay");t&&(t.style.display="flex");const e=this.startMarker.getLatLng(),n=this.endMarker.getLatLng(),i=this.waypoints.filter(t=>null!==t);try{const t=[[e.lat,e.lng],...i.map(t=>[t.lat,t.lng]),[n.lat,n.lng]],s={start:[e.lat,e.lng],end:[n.lat,n.lng],waypoints:t,profile:this.currentProfile};i.forEach((t,e)=>{});const a=await this.apiCall("routing/optimized",{method:"POST",body:JSON.stringify(s)});if(!a.ok){const t=await a.text();if(404===a.status){let e;try{e=JSON.parse(t)}catch{e={detail:t}}return void this.showStatusMessage(`${e.detail||"No optimized route found through waypoints."}`,"error")}throw new Error(`HTTP ${a.status}: ${a.statusText}`)}const o=await a.json();if(o.route||o.trips){if(o.trips&&o.trips.length>0){let t=[],e=[],n=0,i=0;o.trips.forEach((s,a)=>{let o;s.geometry&&(o=s.geometry.geometry?s.geometry.geometry:s.geometry);const r=this.extractPathFromGeometry(o);r&&r.length>0&&(t.length>0&&a>0?(r.length,t.push(...r.slice(1))):t.push(...r));let l=[];s.legs&&s.legs.length>0&&s.legs[0].steps?l=s.legs[0].steps:s.instructions&&s.instructions.length>0&&(l=s.instructions),a>0&&l.length>0&&e.push({instruction:`üéØ Waypoint ${a} reached - Continue to next stop`,distance:0,duration:0,name:`Waypoint ${a}`,maneuver:{type:"waypoint"}}),e.push(...l),n+=s.distance||0,i+=s.duration||0}),o.path=t,o.instructions=e,o.distance_km=n/1e3,o.duration_min=i/60}else o.path=this.extractPathFromGeometry(o.route?.geometry),o.distance_km=o.route?.distance/1e3||0,o.duration_min=o.route?.duration/60||0;o.path,o.algorithm=o.algorithm||"TSP + QuantaRoute",o.compute_time_ms=o.compute_time_ms||0,o.elevation_profile=[],o.elevation_stats=null,o.instructions||(o.instructions=[]),this.displaySingleRoute(o),this.showStatusMessage(`‚úÖ Optimized route through ${i.length} waypoint${i.length>1?"s":""} - ${o.distance_km.toFixed(1)}km in ${o.duration_min.toFixed(0)} min!`,"success")}else this.showStatusMessage("No optimized route found through waypoints","error")}catch(t){this.showStatusMessage(`Optimized routing failed: ${t.message}`,"error")}finally{t&&(t.style.display="none")}}async calculateRoute(){if(!this.startMarker||!this.endMarker)return void this.showStatusMessage("Please set both start and destination points","error");const t=this.waypoints.filter(t=>null!==t);if(t.length>=2)return this.showStatusMessage(`üéØ Calculating optimized route through ${t.length} waypoints (TSP optimization)...`,"info"),await this.calculateOptimizedRoute();1===t.length&&this.showStatusMessage("üéØ Calculating route through 1 waypoint...","info");const e=document.getElementById("loadingOverlay");e&&(e.style.display="flex");const n=this.startMarker.getLatLng(),i=this.endMarker.getLatLng();try{const t=document.getElementById("alternativesToggle");if(!t||t.checked){const t=document.getElementById("algorithmDropdown"),e=t?t.value:"quantaroute";this.log(`üìä Using algorithm: ${e}`);const s={start:[n.lat,n.lng],end:[i.lat,i.lng],profile:this.currentProfile,method:e,num_alternatives:3,diversity_preference:.7};if(this.waypoints.length>0){const t=this.waypoints.filter(t=>null!==t);s.waypoints=t.map(t=>[t.lat,t.lng]),this.log(`üìç Added ${s.waypoints.length} waypoints to route calculation`),this.showStatusMessage(`üéØ Calculating route with ${s.waypoints.length} waypoint${s.waypoints.length>1?"s":""}...`,"info")}this.log("üõ£Ô∏è Calculating alternative routes");const a=await this.apiCall("routing/alternatives",{method:"POST",body:JSON.stringify(s)});if(!a.ok){const t=await a.text();if(404===a.status){let e;try{e=JSON.parse(t)}catch{e={detail:t}}return void this.showStatusMessage(`${e.detail||"No route found for this transport mode."}`,"error")}throw new Error(`HTTP ${a.status}: ${a.statusText}`)}const o=await a.json(),r=o.optimal_route||o.route;if(r){r.geometry?.coordinates?.length||r.path;const t=(r.instructions||[]).filter(t=>t.instruction?.toLowerCase().includes("waypoint")||t.instruction?.toLowerCase().includes("via"));t.length>0?t.forEach(t=>{}):s.waypoints&&s.waypoints.length}this.log("‚úÖ Alternative routes calculated"),this.displayAlternativeRoutesResponse(o)}else{const t={start:[n.lat,n.lng],end:[i.lat,i.lng],profile:this.currentProfile,algorithm:"quantaroute",alternatives:!1};if(this.waypoints.length>0){const e=this.waypoints.filter(t=>null!==t);t.waypoints=e.map(t=>[t.lat,t.lng]),this.log(`üìç Added ${t.waypoints.length} waypoints to single route calculation`),this.showStatusMessage(`üéØ Calculating route with ${t.waypoints.length} waypoint${t.waypoints.length>1?"s":""}...`,"info")}this.log("üöÄ Calculating single route");const e=await this.apiCall("routing",{method:"POST",body:JSON.stringify(t)});if(!e.ok){const t=await e.text();if(404===e.status){let e;try{e=JSON.parse(t)}catch{e={detail:t}}return void this.showStatusMessage(`${e.detail||"No route found for this transport mode."}`,"error")}throw new Error(`HTTP ${e.status}: ${e.statusText}`)}const s=await e.json(),a=s.route||s;if(a){a.geometry?.coordinates?.length||a.path;const e=(a.instructions||[]).filter(t=>t.instruction?.toLowerCase().includes("waypoint")||t.instruction?.toLowerCase().includes("via"));e.length>0?e.forEach(t=>{}):t.waypoints&&t.waypoints.length}s.route&&s.route.geometry&&(s.path=this.extractPathFromGeometry(s.route.geometry),s.distance_km=s.route.distance/1e3,s.duration_min=s.route.duration/60,s.elevation_profile=s.route.elevation_profile||[],s.elevation_stats=s.route.elevation_stats||null,s.instructions=s.route.instructions||[]),this.displayEnhancedRoute(s)}}catch(t){this.showStatusMessage(`Route calculation failed: ${t.message}`,"error");try{const t=this.simulateRouteData(n,i);this.displayEnhancedRoute(t)}catch(t){this.showStatusMessage("Unable to calculate route or fallback simulation","error")}}finally{e&&(e.style.display="none")}}extractPathFromGeometry(t){return t?(t.geometry&&t.geometry.coordinates&&(t=t.geometry),t.coordinates&&Array.isArray(t.coordinates)?t.coordinates.map(t=>Array.isArray(t)&&t.length>=2?[t[1],t[0]]:t):Array.isArray(t)&&t.length>0?t[0]&&2===t[0].length&&Math.abs(t[0][0])>90?t.map(t=>[t[1],t[0]]):t:[]):[]}displayAlternativeRoutesResponse(t){this.log("üé® Displaying alternative routes"),this.clearAlternativeRoutes();const e=[];if(t.optimal_route){let n=this.extractPathFromGeometry(t.optimal_route.geometry||t.optimal_route.route?.geometry);e.push({type:"optimal",name:"üèÜ Optimal Route (SSSP)",description:"Shortest path using breakthrough SSSP O(m¬∑log^{2/3}n) algorithm on real Bengaluru roads",path:n,distance_km:(t.optimal_route.distance||t.optimal_route.route?.distance)/1e3,duration_min:(t.optimal_route.duration||t.optimal_route.route?.duration)/60,is_selected:!0,cost_ratio:1,similarity_to_optimal:1,algorithm:t.optimal_route.algorithm||"quantaroute",instructions:t.optimal_route.instructions||[],elevation_profile:t.optimal_route.elevation_profile||t.optimal_route.route?.elevation_profile||[],elevation_stats:t.optimal_route.elevation_stats||t.optimal_route.route?.elevation_stats||null})}const n=t.alternative_routes&&t.alternative_routes.length>0;if(n?t.alternative_routes.forEach((n,i)=>{let s=this.extractPathFromGeometry(n.geometry||n.route?.geometry);e.push({type:`alternative_${i+1}`,name:n.route_name,description:n.route_description+` (using ${t.computation_method} algorithm)`,path:s,distance_km:(n.distance||n.route?.distance)/1e3,duration_min:(n.duration||n.route?.duration)/60,is_selected:!1,cost_ratio:n.cost_ratio,similarity_to_optimal:n.similarity_to_optimal,route_preference_score:n.route_preference_score,algorithm:n.algorithm||t.computation_method,instructions:n.instructions||[],elevation_profile:n.elevation_profile||n.route?.elevation_profile||[],elevation_stats:n.elevation_stats||n.route?.elevation_stats||null})}):this.log("‚ö†Ô∏è No alternative routes found"),this.currentAlternatives=e,this.currentAlternativeData=t,this.alternativeRouteLayers=[],this.startMarker&&this.startMarker.getLatLng(),this.endMarker&&this.endMarker.getLatLng(),e.forEach((t,e)=>{if(t.path&&t.path.length>1){const n=t.is_selected,i=n?this.getProfileColor(this.currentProfile):this.getAlternativeColor(e,this.currentProfile),s=L.polyline(t.path,{color:i,weight:n?14:8,opacity:n?.8:.6,lineCap:"round",lineJoin:"round"}).addTo(this.map);s.on("click",()=>this.selectAlternativeRoute(e)),n&&t.distance_km&&this.addDistanceMarkersToRoute(t.path,t.distance_km),this.alternativeRouteLayers.push({layer:s,alternative:t,index:e})}}),this.alternativeRouteLayers.length>0){const t=new L.featureGroup(this.alternativeRouteLayers.map(t=>t.layer));this.map.fitBounds(t.getBounds(),{padding:[30,30]})}const i=e.find(t=>t.is_selected)||e[0];this.updateEnhancedRouteInfo(i,t),this.showAlternativeRoutesUI(e,t,!n),this.showFloatingDirections(i),this.showElevationProfile(i);const s=document.getElementById("clearRoute");s&&(s.style.display="block"),n||this.showStatusMessage("Only optimal route available for this location. SSSP algorithm found the shortest path on Bengaluru road network.","info")}getAlternativeColor(t){const e=["#f59e0b","#8b5cf6","#06b6d4","#ef4444","#10b981"];return e[t%e.length]}displayEnhancedRoute(t){t.alternatives?this.displayAlternativeRoutes(t):this.displaySingleRoute(t)}displaySingleRoute(t){if(this.routeLayer&&this.map.removeLayer(this.routeLayer),this.clearConnectorLines(),t.path&&t.path.length>1){let e;if(t.algorithm&&t.algorithm.includes("TSP"))e=t.path;else{const n=this.startMarker?this.startMarker.getLatLng():null,i=this.endMarker?this.endMarker.getLatLng():null;e=this.drawRouteWithConnectors(t.path,n,i)}this.routeLayer=L.polyline(e,{color:this.getProfileColor(this.currentProfile),weight:14,opacity:.8,lineCap:"round",lineJoin:"round"}).addTo(this.map),this.addDistanceMarkersToRoute(e,t.distance_km),this.map.fitBounds(this.routeLayer.getBounds(),{padding:[30,30]})}this.updateEnhancedRouteInfo(t),this.showFloatingDirections(t),this.showElevationProfile(t);const e=document.getElementById("clearRoute");e&&(e.style.display="block")}displayAlternativeRoutes(t){this.clearAlternativeRoutes(),this.currentAlternatives=t.alternatives,this.alternativeRouteLayers=[];const e=t.alternatives.find(t=>t.is_selected)||t.alternatives[0],n=this.startMarker?this.startMarker.getLatLng():null,i=this.endMarker?this.endMarker.getLatLng():null;if(t.alternatives.forEach((t,e)=>{if(t.path&&t.path.length>1){const s=t.is_selected||0===e,a=this.drawRouteWithConnectors(t.path,n,i,s,s?this.getProfileColor(this.currentProfile):"#94a3b8"),o=L.polyline(a,{color:s?this.getProfileColor(this.currentProfile):this.getAlternativeColor(e,this.currentProfile),weight:s?14:8,opacity:s?.8:.6,lineCap:"round",lineJoin:"round"}).addTo(this.map);s&&this.addDistanceMarkersToRoute(a,t.distance_km),this.alternativeRouteLayers.push({layer:o,alternative:t,index:e})}}),this.alternativeRouteLayers.length>0){const t=new L.featureGroup(this.alternativeRouteLayers.map(t=>t.layer));this.map.fitBounds(t.getBounds(),{padding:[30,30]})}this.updateEnhancedRouteInfo(e),this.showFloatingDirections(e),this.showElevationProfile(e),this.showAlternativeRoutesUI(t.alternatives);const s=document.getElementById("clearRoute");s&&(s.style.display="block")}clearAlternativeRoutes(){this.alternativeRouteLayers&&this.alternativeRouteLayers.forEach(t=>{this.map.removeLayer(t.layer)}),this.alternativeRouteLayers=[],this.routeLayer&&(this.map.removeLayer(this.routeLayer),this.routeLayer=null),this.clearConnectorLines(),this.clearDistanceMarkers(),this.hideFloatingDirections()}showAlternativeRoutesUI(t,e=null,n=!1){const i=document.getElementById("alternativeRoutes"),s=document.getElementById("routeAlternativesList"),a=document.getElementById("alternativeCount");if(i&&s){if(a){let i;n?i="1 optimal route found ‚Ä¢ No alternatives available":(i=`${t.length} routes found`,e&&e.diversity_metrics&&(i+=` ‚Ä¢ Diversity: ${(100*e.diversity_metrics.diversity_index).toFixed(0)}%`)),a.textContent=i}if(s.innerHTML="",e&&e.computation_method){const t=document.createElement("div");t.className="algorithm-info-header",t.style.cssText="\n                background: #f8fafc;\n                border: 1px solid #e2e8f0;\n                border-radius: 8px;\n                padding: 12px;\n                margin-bottom: 12px;\n            ",t.innerHTML=n?`\n                    <div class="algorithm-badge" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">\n                        <span class="algorithm-name" style="font-weight: 600; color: #1e40af;">SSSP Algorithm</span>\n                        <span class="algorithm-time" style="color: #059669; font-weight: 500;">${(e.compute_time_ms||e.total_compute_time_ms||0).toFixed(0)}ms</span>\n                    </div>\n                    <div class="no-alternatives-message" style="background: #fef3c7; border: 1px solid #f59e0b; border-radius: 6px; padding: 8px; font-size: 12px; color: #92400e;">\n                        <strong>‚ÑπÔ∏è No alternative routes available</strong><br>\n                        The optimal route is the only viable path between these locations on the Bengaluru road network.\n                        This often happens for short distances or when the destination is in a limited-access area.\n                    </div>\n                `:`\n                    <div class="algorithm-badge" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">\n                        <span class="algorithm-name" style="font-weight: 600; color: #1e40af;">SSSP + ${(e.computation_method||"FAST").toUpperCase()} Algorithms</span>\n                        <span class="algorithm-time" style="color: #059669; font-weight: 500;">${(e.compute_time_ms||e.total_compute_time_ms||0).toFixed(0)}ms</span>\n                    </div>\n                    ${e.diversity_metrics?`\n                    <div class="diversity-stats" style="display: flex; gap: 16px; font-size: 12px; color: #6b7280;">\n                        <span class="diversity-stat">Avg Similarity: ${(100*(e.diversity_metrics.avg_similarity||0)).toFixed(0)}%</span>\n                        <span class="diversity-stat">Max Cost Ratio: ${(e.diversity_metrics.max_cost_ratio||1).toFixed(1)}x</span>\n                        <span class="diversity-stat">Diversity Index: ${(100*(e.diversity_metrics.diversity_index||0)).toFixed(0)}%</span>\n                    </div>`:""}\n                `,s.appendChild(t)}t.forEach((t,e)=>{const n=document.createElement("div");n.className="route-alternative-item "+(t.is_selected?"selected":""),n.dataset.index=e;const i=t.cost_ratio||1,a=t.similarity_to_optimal||1,o=(100*(i-1)).toFixed(0),r=t.is_selected?this.getProfileColor(this.currentProfile):this.getAlternativeColor(e,this.currentProfile);n.innerHTML=`\n                <div class="alternative-info">\n                    <div class="alternative-header" style="display: flex; align-items: center; margin-bottom: 4px;">\n                        <div class="route-color-indicator" style="background-color: ${r}; width: 4px; height: 20px; border-radius: 2px; margin-right: 8px;"></div>\n                        <div class="alternative-name" style="flex: 1; font-weight: 500;">${t.name||"Route "+(e+1)}</div>\n                        ${i>1?`<div class="cost-indicator" style="background: #fef3c7; color: #92400e; padding: 2px 6px; border-radius: 10px; font-size: 11px; font-weight: 500;">+${o}%</div>`:""}\n                    </div>\n                    <div class="alternative-description">${t.description||""}</div>\n                    <div class="alternative-stats">\n                        <span class="alternative-stat">üìè <strong>${(t.distance_km||0).toFixed(1)} km</strong></span>\n                        <span class="alternative-stat">‚è±Ô∏è <strong>${this.formatDuration(t.duration_min)}</strong></span>\n                        ${a<1?`<span class="alternative-stat">üîÑ ${(100*a).toFixed(0)}% similar</span>`:""}\n                    </div>\n                    ${t.route_preference_score?`\n                    <div class="preference-score" style="font-size: 11px; color: #6b7280; margin-top: 4px;">\n                        Route Score: ${(t.route_preference_score||0).toFixed(2)}/5.0\n                    </div>`:""}\n                </div>\n                <div class="alternative-actions">\n                    <button class="select-route-btn" data-index="${e}">\n                        ${t.is_selected?"‚úì Selected":"Select"}\n                    </button>\n                </div>\n            `,n.addEventListener("click",t=>{t.target.classList.contains("select-route-btn")||this.selectAlternativeRoute(e)}),n.querySelector(".select-route-btn").addEventListener("click",t=>{t.stopPropagation(),this.selectAlternativeRoute(e)}),s.appendChild(n)}),i.style.display="block"}}selectAlternativeRoute(t){if(!this.currentAlternatives||!this.alternativeRouteLayers)return;this.currentAlternatives.forEach((e,n)=>{e.is_selected=n===t}),this.alternativeRouteLayers.forEach((e,n)=>{const i=n===t;e.layer.setStyle({color:i?this.getProfileColor(this.currentProfile):this.getAlternativeColor(n,this.currentProfile),weight:i?14:8,opacity:i?.8:.6})}),this.showAlternativeRoutesUI(this.currentAlternatives);const e=this.currentAlternatives[t];this.updateEnhancedRouteInfo(e),this.showFloatingDirections(e),this.showElevationProfile(e)}updateEnhancedRouteInfo(t,e=null){const n=document.getElementById("routeInfo");if(document.getElementById("routeDistance")&&(document.getElementById("routeDistance").textContent=`${(t.distance_km||0).toFixed(1)} km`),document.getElementById("routeDuration")&&(document.getElementById("routeDuration").textContent=`${(t.duration_min||0).toFixed(0)} min`),document.getElementById("routeMode")){const t={car:"Driving",bicycle:"Cycling",foot:"Walking",motorcycle:"Motorcycle"};document.getElementById("routeMode").textContent=t[this.currentProfile]||"Driving"}const i=document.getElementById("performanceIndicator"),s=document.getElementById("routeComputeTime");if(i&&s){let n=t.compute_time_ms||200*Math.random()+50,a=`Route calculated in ${Math.round(n)}ms`;e&&e.computation_method&&(a+=` using ${e.computation_method.toUpperCase()}`),s.textContent=a,i.style.display="block"}n&&(n.style.display="block")}clearRoute(){this.startMarker&&(this.map.removeLayer(this.startMarker),this.startMarker=null),this.endMarker&&(this.map.removeLayer(this.endMarker),this.endMarker=null),this.routeLayer&&(this.map.removeLayer(this.routeLayer),this.routeLayer=null),this.ssspRouteLayer&&(this.map.removeLayer(this.ssspRouteLayer),this.ssspRouteLayer=null),this.dijkstraRouteLayer&&(this.map.removeLayer(this.dijkstraRouteLayer),this.dijkstraRouteLayer=null),this.clearAlternativeRoutes(),this.currentAlternatives=null,this.waypointMarkers.forEach(t=>{t&&this.map.removeLayer(t)}),this.waypoints=[],this.waypointMarkers=[],this.clearConnectorLines(),this.clearDistanceMarkers(),this.hideFloatingDirections();const t=document.getElementById("fromInput"),e=document.getElementById("toInput");t&&(t.value=""),e&&(e.value="");const n=document.getElementById("waypointsList");n&&(n.innerHTML="");const i=document.getElementById("routeInfo");i&&(i.style.display="none");const s=document.getElementById("alternativeRoutes");s&&(s.style.display="none"),this.hideElevationProfile();const a=document.getElementById("performanceIndicator");if(a&&(a.style.display="none"),this.clickCount=0,this.explorationVisualizer)try{this.explorationVisualizer.clearExploration()}catch(t){}const o=document.getElementById("clearRoute");o&&(o.style.display="none"),this.map.closePopup(),this.updateRoutePointsDisplay(),this.showStatusMessage("üéØ Click anywhere on the map to set your start point!","info")}simulateRouteData(t,e){const n=this.toRadians(e.lat-t.lat),i=this.toRadians(e.lng-t.lng),s=Math.sin(n/2)*Math.sin(n/2)+Math.cos(this.toRadians(t.lat))*Math.cos(this.toRadians(e.lat))*Math.sin(i/2)*Math.sin(i/2),a=2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s))*6371;let o=50;switch(this.currentProfile){case"car":o=45;break;case"motorcycle":o=40;break;case"bicycle":o=15;break;case"foot":o=5}const r=a/o*60,l=[];for(let n=0;n<=15;n++){const i=n/15,s=t.lat+(e.lat-t.lat)*i,a=t.lng+(e.lng-t.lng)*i;l.push([s,a])}return{path:l,distance_km:Math.max(.1,a),duration_min:Math.max(1,r),algorithm:"Simulated Route",compute_time_ms:100*Math.random()+50}}}document.addEventListener("DOMContentLoaded",()=>{window.quantaRouteDemo=new QuantaRouteDemo});
//# sourceMappingURL=demo.min.js.map